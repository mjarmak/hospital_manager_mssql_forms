// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hospital_manager_data_access.Data;

namespace hospital_manager_api.Data.Migrations.DefaultHospitalDbContext
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hospital_manager_data_access.Entities.AddressData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.AppointmentData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.ConsultationData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoctorDataUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<long>("HospitalId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DoctorDataUsername");

                    b.ToTable("Consultation");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.DoctorData", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.HospitalData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.OpeningHoursData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HospitalDataId")
                        .HasColumnType("bigint");

                    b.Property<int>("HourFrom")
                        .HasColumnType("int");

                    b.Property<int>("HourTo")
                        .HasColumnType("int");

                    b.Property<int>("MinuteFrom")
                        .HasColumnType("int");

                    b.Property<int>("MinuteTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HospitalDataId");

                    b.ToTable("OpeningHours");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.RoomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("HospitalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomData");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.SpecialityData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Speciality");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.SpecialityToDoctorData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoctorDataUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("SpecialityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DoctorDataUsername");

                    b.ToTable("SpecialityToDoctor");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.SpecialityToRoomData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("RoomDataId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoomDataId");

                    b.ToTable("SpecialityToRoom");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.ConsultationData", b =>
                {
                    b.HasOne("hospital_manager_data_access.Entities.DoctorData", null)
                        .WithMany("Consultations")
                        .HasForeignKey("DoctorDataUsername");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.HospitalData", b =>
                {
                    b.HasOne("hospital_manager_data_access.Entities.AddressData", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.OpeningHoursData", b =>
                {
                    b.HasOne("hospital_manager_data_access.Entities.HospitalData", null)
                        .WithMany("OpeningHours")
                        .HasForeignKey("HospitalDataId");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.SpecialityToDoctorData", b =>
                {
                    b.HasOne("hospital_manager_data_access.Entities.DoctorData", null)
                        .WithMany("Specialities")
                        .HasForeignKey("DoctorDataUsername");
                });

            modelBuilder.Entity("hospital_manager_data_access.Entities.SpecialityToRoomData", b =>
                {
                    b.HasOne("hospital_manager_data_access.Entities.RoomData", null)
                        .WithMany("Specialities")
                        .HasForeignKey("RoomDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
